name: Deploy Infra & Aplicações

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Init & Apply
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: infra/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  build-push:
    name: Build & Push Docker Images
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build JAR auth-service
        run: |
          cd auth-service
          mvn clean package -DskipTests

      - name: Build JAR patient-service
        run: |
          cd patient-service
          mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push auth-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service ./auth-service
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service

      - name: Build & Push patient-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/patient-service ./patient-service
          docker push ${{ secrets.DOCKER_USERNAME }}/patient-service

      - name: Build & Push frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend ./frontend/frontend-cli
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend

  ssh-deploy:
    name: SSH para Servidor e Docker Compose Up
    needs: build-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            cd /home/ubuntu/healthcare_project
            docker-compose pull
            docker-compose up -d
