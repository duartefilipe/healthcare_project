name: Deploy Infra & Aplicações

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Init & Apply
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    defaults:
      run:
        working-directory: infra/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  build-push:
    name: Build & Push Docker Images
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build JAR auth-service
        run: |
          cd auth-service
          mvn clean package -DskipTests

      - name: Build JAR patient-service
        run: |
          cd patient-service
          mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push auth-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service ./auth-service
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service

      - name: Build & Push patient-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/patient-service ./patient-service
          docker push ${{ secrets.DOCKER_USERNAME }}/patient-service

      - name: Build & Push frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend ./frontend/frontend-cli
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend

  ssh-deploy:
    name: SSH para Servidor e Docker Compose Up
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          script: |
            set -e

            REPO_URL="git@github.com:duartefilipe/healthcare_project.git"
            DEST_DIR="/home/ubuntu/healthcare_project"
            COMPOSE_FILE_PATH="infra/docker-compose.yml"

            echo "Verificando se o Docker está rodando..."
            if ! sudo systemctl is-active --quiet docker; then
              echo "Docker não está rodando. Iniciando..."
              sudo systemctl start docker
            fi

            echo "Instalando docker-compose (se necessário)..."
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            echo "Verificando repositório..."
            if [ ! -d "$DEST_DIR/.git" ]; then
              echo "Clonando repositório..."
              git clone "$REPO_URL" "$DEST_DIR"
            else
              echo "Atualizando repositório..."
              cd "$DEST_DIR"
              git reset --hard
              git pull origin main
            fi

            cd "$DEST_DIR"
            echo "Conteúdo do repositório clonado:"
            ls -la

            if [ ! -f "$COMPOSE_FILE_PATH" ]; then
              echo "Arquivo docker-compose.yml não encontrado no caminho $COMPOSE_FILE_PATH"
              exit 1
            fi

            echo "Executando docker-compose up com o arquivo $COMPOSE_FILE_PATH..."
            docker-compose -f "$COMPOSE_FILE_PATH" pull
            docker-compose -f "$COMPOSE_FILE_PATH" up -d
